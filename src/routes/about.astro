---
import BaseLayout from "@layouts/BaseLayout.astro";
import CTA from "@components/CTA.astro";
import Landing from "@components/Landing.astro";
import { t } from "i18n:astro";

// Optimize our landing image and pass it as props to the BaseLayout (for preloading) and Landing (for rendering)
import {getOptimizedImage} from "@utils/utils"
import landingImage from "@assets/images/landing.jpg" // <-- THE PATH TO THE ASSET YOU WANT TO PRELOAD - The asset must live in src
const optimizedImage = await getOptimizedImage(landingImage)



import { getOptimizedImage } from "@utils/utils";

// Import About section images
import aboutImage1 from "@assets/images/about1.jpg";
import galImage1 from "@assets/images/gal1.jpg";

// Optimize About section images
const optimizedAboutImage1 = await getOptimizedImage(aboutImage1);
const optimizedGalImage1 = await getOptimizedImage(galImage1);

---

<BaseLayout
  title={t("about-page.landing")}
  description="Meta description for the page"
  preloadedImage = {optimizedImage}
>
  <!-- ============================================ -->
  <!--                    LANDING                   -->
  <!-- ============================================ -->

  <Landing 
    title={t("about-page.landing")} 
    image={optimizedImage}
  />

  <!-- ============================================ -->
  <!--                 Side By Side                 -->
  <!-- ============================================ -->

  <section id="sbs">
    <div class="cs-container">
      <!-- Left Image Section -->
      <div class="cs-left">
        <picture class="cs-picture cs-picture1">
          <source
            media="(max-width: 600px)"
            srcset={optimizedGalImage1.src}
          />
          <source
            media="(min-width: 601px)"
            srcset={optimizedGalImage1.src}
          />
          <img
            aria-hidden="true"
            decoding="async"
            src={optimizedGalImage1.src}
            alt="gallery"
            loading="lazy"
            width={optimizedGalImage1.attributes.width}
            height={optimizedGalImage1.attributes.height}
          />
        </picture>
        <picture class="cs-picture cs-picture2">
          <source
            media="(max-width: 600px)"
            srcset={optimizedAboutImage1.src}
          />
          <source
            media="(min-width: 601px)"
            srcset={optimizedAboutImage1.src}
          />
          <img
            aria-hidden="true"
            decoding="async"
            src={optimizedAboutImage1.src}
            alt="about us"
            loading="lazy"
            width={optimizedAboutImage1.attributes.width}
            height={optimizedAboutImage1.attributes.height}
          />
        </picture>
      </div>
      <!-- Right Content Section-->
      <div class="cs-right">
        <span class="cs-topper">{t("about-page.topper")}</span>
        <h2 class="cs-title">{t("about-page.title")}</h2>
        <p class="cs-text">
          {t("about-page.p-1")}
        </p>
        <p class="cs-text">
          {t("about-page.p-2")}
        </p>
         <p class="cs-text">
          {t("about-page.p-3")}
        </p>
        <div class="cs-flex-group">
          <p class="cs-flex-p">
            {t("about-page.p-4")}
          </p>
          <span class="cs-name">Pui</span>
          <span class="cs-job">{t("about-page.rank")}</span>
          <img
            class="cs-quote-icon"
            loading="lazy"
            decoding="async"
            src="https://csimg.nyc3.digitaloceanspaces.com/SideBySide/quote-white.svg"
            alt="gavel"
            width="136"
            height="77"
          />
        </div>
      </div>
    </div>
  </section>

<!-- ============================================ -->
<!--                    Values                    -->
<!-- ============================================ -->

<section id="services-2371">
    <div class="cs-container">
        <ul class="cs-card-group">
            <li class="cs-item">
                <img class="cs-icon" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/therapy1.svg" alt="icon" width="120" height="120">
                <h3 class="cs-h3">{t("common:about-page.ourStory.items.0.heading")}</h3>
                <p class="cs-item-text">
                    {t("common:about-page.ourStory.items.0.p")}
                </p>
            </li>
            <li class="cs-item">
                <img class="cs-icon" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/therapy2.svg" alt="icon" width="120" height="120">
                <h3 class="cs-h3">{t("common:about-page.ourStory.items.1.heading")}</h3>
                <p class="cs-item-text">
                    {t("common:about-page.ourStory.items.1.p")}
                </p>
            </li>
            <li class="cs-item">
                <img class="cs-icon" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Icons/therapy3.svg" alt="icon" width="120" height="120">
                <h3 class="cs-h3">{t("common:about-page.ourStory.items.2.heading")}</h3>
                <p class="cs-item-text">
                    {t("common:about-page.ourStory.items.2.p")}
                </p>
            </li>
        </ul>
    </div>
</section>
                                


  <CTA />
</BaseLayout>

<style lang="less">
  /* PAGE-SPECIFIC STYLES FOR THE ABOUT PAGE */

  /*-- -------------------------- -->
<---       Side By Side         -->
<--- -------------------------- -*/

  /* Mobile - 360px */
  @media only screen and (min-width: 0em) {
    #sbs {
      padding: var(--sectionPadding);

      .cs-container {
        width: 100%;
        max-width: (1280/16rem);
        margin: auto;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        row-gap: (40/16rem);
      }

      .cs-left {
        /* scaling the font size with the view width */
        font-size: ~"min(2.31vw, .7em)";
        /* using ems so we can use font size to scale the whole section */
        width: (631/16em);
        height: (636/16em);
        position: relative;
      }

      .cs-picture {
        border-radius: (24/16em);
        display: block;
        position: absolute;
        /* clips img tag corners */
        overflow: hidden;
        img {
          width: 100%;
          height: 100%;
          /* makes image act like a background image */
          object-fit: cover;
          position: absolute;
          top: 0;
          left: 0;
        }
      }

      .cs-picture1 {
        width: (522/16em);
        height: (581/16em);
        top: 0;
        left: 0;
      }

      .cs-picture2 {
        width: (414/16em);
        height: (400/16em);
        background-color: #fff;
        right: 0;
        bottom: 0;
      }

      .cs-right {
        max-width: (542/16rem);
        margin: auto;
      }

      .cs-topper {
        text-align: left;
        margin-bottom: (4/16rem);
      }

      .cs-title {
        text-align: left;
        max-width: (800/16rem);
      }

      .cs-text {
        text-align: left;
        max-width: (750/16rem);
        margin-bottom: (16/16rem);
        color: var(--bodyTextColor);

        &:last-of-type {
          margin-bottom: (32/16rem);
        }
      }

      .cs-flex-group {
        /* 16px - 32px */
        padding: clamp(1rem, 3vw, 2rem);
        background-color: var(--sectionColor);
        border-radius: (16/16rem);
        position: relative;
      }

      .cs-flex-p {
        /* 14px - 16px */
        font-size: clamp(0.875rem, 1.5vw, 1rem);
        line-height: 1.5em;
        margin: 0 0 (16/16rem);
        color: #353535;
      }

      .cs-name {
        font-size: (16/16rem);
        font-weight: bold;
        line-height: 1.2em;
        text-transform: uppercase;
        margin: 0 0 (4/16rem);
        color: var(--headerColor);
        display: block;
      }

      .cs-job {
        font-size: (14/16rem);
        line-height: 1.5em;
        color: #353535;
        display: block;
      }

      .cs-quote-icon {
        /* 60px - 136px */
        width: clamp(3.75rem, 10vw, 8.5rem);
        height: auto;
        position: absolute;
        /* 16px - 32px */
        right: clamp(1rem, 4vw, 2rem);
        bottom: (0/16rem);
      }

      .cs-button-solid {
        margin-top: (32/16rem);
      }
    }
  }

  /* Desktop - 1024px */
  @media only screen and (min-width: 64em) {
    #sbs {
      .cs-container {
        flex-flow: row;
        justify-content: space-between;
        gap: (52/16rem);
      }

      .cs-left {
        font-size: ~"min(1.2vw, 1em)";
        flex: none;
      }

      .cs-right {
        margin: 0;
      }
    }
  }

  /* Dark Mode */
  @media only screen and (min-width: 0em) {
    body.dark-mode {
      #sbs {
        .cs-left {
          &:before,
          &:after {
            background: var(--accent);
          }
        }

        .cs-picture2 {
          background-color: var(--dark);
        }

        .cs-title,
        .cs-text,
        .cs-h3,
        .cs-flex-p,
        .cs-name {
          color: var(--bodyTextColorWhite);
        }

        .cs-flex-group {
          background-color: var(--accent);
        }

        .cs-job {
          color: var(--bodyTextColorWhite);
          opacity: 0.8;
        }

        .cs-quote-icon {
          opacity: 0.2;
        }
      }
    }
  }

/*-- -------------------------- -->
<---         Services           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #services-2371 {
        padding: var(--sectionPadding);
        background-color: var(--sectionColor);

        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
        }

        .cs-card-group {
            margin: 0;
            padding: 0;
            width: 100%;
            display: grid;
            grid-template-columns: repeat(12, 1fr);
            gap: (20/16rem);
        }

        .cs-item {
            width: 100%;
            text-align: left;
            list-style: none;
            margin: 0;
            /* 16px - 32px */
            padding: clamp(1rem, 3vw, 2rem);
            /* 80px - 140px */
            padding-top: clamp(5rem, 10vw, 8.75rem);
            border-radius: (16/16rem);
            background-color: #fff;
            /* prevents padding and border from affecting height and width */
            box-sizing: border-box;
            grid-column: span 12;
            grid-row: span 1;
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            justify-content: center;
            position: relative;
            z-index: 1;
        }

        .cs-icon {
            /* 80px - 120px */
            height: clamp(5rem, 9vw, 7.5rem);
            width: auto;
            position: absolute;
            top: 0;
            right: 0;
        }

        .cs-h3 {
            /* 20px - 25px */
            font-size: clamp(1.25rem, 2.5vw, 1.5625rem);
            line-height: 1.2em;
            font-weight: bold;
            text-align: inherit;
            margin: 0 0 (12/16rem) 0;
            color: var(--headerColor);
        }

        .cs-item-text {
            /* 14px - 16px */
            font-size: clamp(0.875rem, 1.5vw, 1rem);
            line-height: 1.5em;
            max-width: (450/16rem);
            margin: 0;
            padding: 0;
            color: var(--bodyTextColor);
        }
    }
}

/* Tablet - 700px */
@media only screen and (min-width: 43.75rem) {
    #services-2371 {
        .cs-item {
            grid-column: span 4;
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #services-2371 {
            background-color: rgba(0, 0, 0, .2);

            .cs-item {
                background-color: var(--medium);
            }

            .cs-title,
            .cs-text,
            .cs-h3,
            .cs-item-text {
                color: var(--bodyTextColorWhite);
            }

            .cs-text {
                opacity: 0.8;
            }
        }
    }
}
                                


</style>
